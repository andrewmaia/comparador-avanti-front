# @format

AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template deploys a CodePipeline with its required resources.

  The following stages are predefined in this template:
  - DeteccaoAlteracoesRepositorio
  - AtualizarPipeline
  - GerarPacotesPublicacao
  - PublicarEmProd

  **WARNING** You will be billed for the AWS resources used if you create a stack from this template.

# To deploy this template and connect to the main git branch, run this against the leading account:
# `sam deploy -t codepipeline.yaml --stack-name <stack-name> --capabilities=CAPABILITY_IAM`.
# After creating the stack, the CodeStar Connection is in PENDING status by default. You must complete
# the OAuth handshake with the third-party provider using the installation associated with your connection.
# See https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-update.html for instructions.

Parameters:
  GitProviderType:
    Type: String
    Default: "GitHub"
  FullRepositoryId:
    Type: String
    Default: "andrewmaia/comparador-avanti-front"
  MainGitBranch:
    Type: String
    Default: "master"
  SamTemplate:
    Type: String
    Default: "template.yaml"
  ProdRegion:
    Type: String
    Default: "us-east-1"
  ProdStackName:
    Type: String
    Default: "comparador-avanti-front-prod"
  ProdImageRepository:
    Type: String
    # If there are functions with "Image" PackageType in your template,
    # Update the line below with image repository URL and add "--image-repository ${PROD_IMAGE_REPOSITORY}" to
    # prod "sam package" and "sam deploy" commands in buildspec files (in pipeline/).
    Default: ""
  # CodeStarConnectionArn and FeatureGitBranch are required for pipelines for feature branches
  CodeStarConnectionArn:
    Type: String
    Default: "arn:aws:codestar-connections:us-east-1:884588048908:connection/891bc702-0bcb-46ea-a1fc-8f1857cdf42f"

Conditions:
  CreateConnection: !Equals [!Ref CodeStarConnectionArn, ""]

Resources:
  #aws-sam-cli-managed-test-pipeline-resources
  PipelineUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      Policies:
        - PolicyName: AssumeRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sts:AssumeRole"
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role

  PipelineUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      Serial: 1
      Status: Active
      UserName: !Ref PipelineUser

  PipelineUserSecretKey:
    Type: AWS::SecretsManager::Secret
    Properties:
      SecretString: !Sub '{"aws_access_key_id": "${PipelineUserAccessKey}", "aws_secret_access_key": "${PipelineUserAccessKey.SecretAccessKey}"}'

  ProdCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  ProdPipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
        - Key: Role
          Value: pipeline-execution-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                !GetAtt PipelineUser.Arn
            Action:
              - 'sts:AssumeRole'
          - Effect: Allow
            Principal:
              # Allow roles with tag Role=aws-sam-pipeline-codebuild-service-role to assume this role.
              # This is required when CodePipeline is the CI/CD system of choice.
              AWS:
                !Ref AWS::AccountId
            Action:
              - 'sts:AssumeRole'
            Condition:
              StringEquals:
                aws:PrincipalTag/Role: aws-sam-pipeline-codebuild-service-role

  ProdArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      LoggingConfiguration:
        DestinationBucketName:
          !Ref ArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ProdArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join [ '',[ !GetAtt ProdArtifactsBucket.Arn, '/*' ] ]
              - !GetAtt ProdArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - 's3:GetObject*'
              - 's3:PutObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Resource:
              - !Join ['',[!GetAtt ProdArtifactsBucket.Arn, '/*']]
              - !GetAtt ProdArtifactsBucket.Arn
            Principal:
              AWS: !GetAtt ProdPipelineExecutionRole.Arn
              AWS: !GetAtt ProdCloudFormationExecutionRole.Arn
  ArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: "Retain"
    Properties:
      AccessControl: "LogDeliveryWrite"
      OwnershipControls:
        Rules:
          - ObjectOwnership:  ObjectWriter
      Tags:
        - Key: ManagedStackSource
          Value: AwsSamCli
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  ArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Join [ '',[ !GetAtt ArtifactsLoggingBucket.Arn, '/*' ] ]
              - !GetAtt ArtifactsLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  PipelineExecutionRolePermissionPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PipelineExecutionRolePermissions
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 'iam:PassRole'
            Resource:
              !GetAtt ProdCloudFormationExecutionRole.Arn
          - Effect: Allow
            Action:
              - "cloudformation:CreateChangeSet"
              - "cloudformation:DescribeChangeSet"
              - "cloudformation:ExecuteChangeSet"
              - "cloudformation:DeleteStack"
              - "cloudformation:DescribeStackEvents"
              - "cloudformation:DescribeStacks"
              - "cloudformation:GetTemplate"
              - "cloudformation:GetTemplateSummary"
              - "cloudformation:DescribeStackResource"
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:DeleteObject'
              - 's3:GetObject*'
              - 's3:PutObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Resource:
              - !Join [ '',[ !GetAtt ProdArtifactsBucket.Arn, '/*' ] ]
              - !GetAtt ProdArtifactsBucket.Arn
      Roles:
        - !Ref ProdPipelineExecutionRole


  #aws-sam-cli-managed-test-pipeline-resources 

  #   ____
  # / ___|  ___  _   _ _ __ ___ ___
  # \___ \ / _ \| | | | '__/ __/ _ \
  #   ___) | (_) | |_| | | | (_|  __/
  # |____/ \___/ \__,_|_|  \___\___|
  CodeStarConnection:
    Condition: CreateConnection
    Type: AWS::CodeStarConnections::Connection
    Properties:
      ConnectionName: GitRepositoryConnection
      ProviderType: !Ref GitProviderType

  #  ____  _            _ _
  # |  _ \(_)_ __   ___| (_)_ __   ___
  # | |_) | | '_ \ / _ | | | '_ \ / _ \
  # |  __/| | |_) |  __| | | | | |  __/
  # |_|   |_| .__/ \___|_|_|_| |_|\___|
  #         |_|
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref PipelineArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRole.Arn
      RestartExecutionOnUpdate: true
      Stages:
        - Name: DeteccaoAlteracoesRepositorio
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              Configuration:
                ConnectionArn:
                  !If [
                    CreateConnection,
                    !Ref CodeStarConnection,
                    !Ref CodeStarConnectionArn,
                  ]
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: "master"
              OutputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
        - Name: AtualizarPipeline
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
                TemplatePath: SourceCodeAsZip::codepipeline.yaml
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Sub |
                  {
                    "CodeStarConnectionArn": "${CodeStarConnectionArn}"
                  }
              InputArtifacts:
                - Name: SourceCodeAsZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt PipelineStackCloudFormationExecutionRole.Arn
                StackName: !Ref AWS::StackName
                ChangeSetName: !Sub ${AWS::StackName}-ChangeSet
              OutputArtifacts:
                - Name: !Sub ${AWS::StackName}ChangeSet
              RunOrder: 2
              
        - Name: RodarEslint
          Actions:
            - Name: Eslint
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectEslint
              InputArtifacts:
                - Name: SourceCodeAsZip

        - Name: CriarBucketFront
          Actions:
            - Name: SamBuildDeploy
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildAndPackage
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip

        - Name: RodarWebpackObterArquivosFront
          Actions:
            - Name: RodarWebpackObterArquivos
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CodeBuildProjectArquivosNecessariosFront
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: ArquivosFront    
                
        - Name: CopiarArquivosParaBucket
          Actions:
            - Name: CopiarArquivos
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: "1"
              Configuration:
                BucketName: "comparador-avanti-front"
                Extract: true
                CannedACL: public-read
              InputArtifacts:
                - Name: ArquivosFront

  PipelineArtifactsBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LoggingConfiguration:
        DestinationBucketName: !Ref PipelineArtifactsLoggingBucket
        LogFilePrefix: "artifacts-logs"
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Sub "${PipelineArtifactsBucket.Arn}/*"
              - !GetAtt PipelineArtifactsBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false
          - Action:
              - s3:*
            Effect: Allow
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}
              - !Sub arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*
            Principal:
              AWS:
                - !GetAtt CodePipelineExecutionRole.Arn

  PipelineArtifactsLoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      AccessControl: "LogDeliveryWrite"
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  PipelineArtifactsLoggingBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PipelineArtifactsLoggingBucket
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Sub "${PipelineArtifactsLoggingBucket.Arn}/*"
              - !GetAtt PipelineArtifactsLoggingBucket.Arn
            Condition:
              Bool:
                aws:SecureTransport: false

  CodePipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "iam:PassRole"
                Resource: "*"
        - PolicyName: CodeStarConnectionAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codestar-connections:UseConnection"
                Resource:
                  !If [
                    CreateConnection,
                    !Ref CodeStarConnection,
                    !Ref CodeStarConnectionArn,
                  ]
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - "s3:*"
                Effect: Allow
                Resource: "*"

        - PolicyName: CodePipelineCodeBuildAndCloudformationAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                Resource:
                  - !GetAtt CodeBuildProjectEslint.Arn                
                  - !GetAtt CodeBuildProjectBuildAndPackage.Arn                
                  - !GetAtt CodeBuildProjectArquivosNecessariosFront.Arn                  
              - Effect: Allow
                Action:
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:SetStackPolicy"
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - !Sub "arn:${AWS::Partition}:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${AWS::StackName}/*"

  # PipelineStackCloudFormationExecutionRole is used for the pipeline to self mutate
  PipelineStackCloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Action: "sts:AssumeRole"
          Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "*"
                Resource: "*"

  #   ____          _      ____        _ _     _
  #  / ___|___   __| | ___| __ ) _   _(_| | __| |
  # | |   / _ \ / _` |/ _ |  _ \| | | | | |/ _` |
  # | |__| (_) | (_| |  __| |_) | |_| | | | (_| |
  #  \____\___/ \__,_|\___|____/ \__,_|_|_|\__,_|
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource:
                  - !Sub "arn:${AWS::Partition}:s3:::${PipelineArtifactsBucket}/*"
        - PolicyName: AssumeStagePipExecutionRoles
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - sts:AssumeRole
                Effect: Allow
                Resource: "*"
                Condition:
                  StringEquals:
                    aws:ResourceTag/Role: pipeline-execution-role
  CodeBuildProjectEslint:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_eslint.yml

  CodeBuildProjectBuildAndPackage:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: SAM_TEMPLATE
            Value: !Ref SamTemplate
          - Name: PROD_REGION
            Value: !Ref ProdRegion
          - Name: PROD_PIPELINE_EXECUTION_ROLE
            Value: !GetAtt ProdPipelineExecutionRole.Arn
          - Name: PROD_ARTIFACT_BUCKET
            Value: !Select [5, !Split [':', !GetAtt ProdArtifactsBucket.Arn]]
          - Name: PROD_IMAGE_REPOSITORY
            Value: !Ref ProdImageRepository
          - Name: ENV_TEMPLATE
            Value: "packaged-prod.yaml"
          - Name: ENV_REGION
            Value: !Ref ProdRegion
          - Name: ENV_STACK_NAME
            Value: !Ref ProdStackName            
          - Name: ENV_PIPELINE_EXECUTION_ROLE
            Value: !GetAtt ProdPipelineExecutionRole.Arn
          - Name: ENV_CLOUDFORMATION_EXECUTION_ROLE
            Value: !GetAtt ProdCloudFormationExecutionRole.Arn            
          - Name: ENV_BUCKET
            Value: !Select [5, !Split [':', !GetAtt ProdArtifactsBucket.Arn]]
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_build_package.yml

       
  CodeBuildProjectArquivosNecessariosFront:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: false
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/buildspec_webpack_copiar_arquivos_front.yml
Outputs:
  CodeStarConnectionArn:
    Condition: CreateConnection
    Description: The Arn of AWS CodeStar Connection used to connect to external code repositories.
    Value: !Ref CodeStarConnection
